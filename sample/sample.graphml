<?xml version="1.0" encoding="UTF-8"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">
<key id="name"   for="node" attr.name="name"/>
<key id="text"   for="node" attr.name="text"/>
<key id="notes"  for="node" attr.name="notes"/>
<key id="labels" for="node" attr.name="labels"/>
<graph id="G" edgedefault="directed">
<node id="n">
<data key="labels">:TITLE</data>
<data key="name">Short Title</data>
<data key="text">Longer meaningful title of document</data>
<data key="notes">Third line will go in [notes] by default</data>
</node>
<node id="n1">
<data key="labels">:HEADING</data>
<data key="name">1 Heading</data>
<data key="text"></data>
<data key="notes"></data>
</node>
<node id="n1.1">
<data key="labels">:HEADING</data>
<data key="name">1.1 Sub-heading</data>
<data key="text"></data>
<data key="notes"></data>
</node>
<node id="n1.1.1">
<data key="labels">:CONTENT</data>
<data key="name">1.1.1 Content</data>
<data key="text">By deafult, the content nodes must be multiple lines. The second line will set [text] property</data>
<data key="notes">The third and the rest of the lines can either set [notes] property or be joined to the [text] property - depending on the [extractNotes] configuration.</data>
</node>
<node id="n1.2">
<data key="labels">:HEADING</data>
<data key="name">1.2 Multiple line heading node</data>
<data key="text">This is an example of overwriting the node type setting. The second lines, by default, are saved in [text] property.</data>
<data key="notes">The third lines and below are dealt as explained in 1.1.1 above.</data>
</node>
<node id="n1.2.1">
<data key="labels">:CONTENT</data>
<data key="name">1.2.1 Single line content node</data>
<data key="text"></data>
<data key="notes"></data>
</node>
<node id="n1.2.2">
<data key="labels">:CONTENT</data>
<data key="name">1.2.2 Content with cross-link</data>
<data key="text">This is an example of cross-linked node to (1.1.1).</data>
<data key="notes">Cross-links are captrured only from the [text] properties. As this text is in the [notes], this reference (1.2.1) will not be taken to cross-links. 
However, if [extractNotes] is false, all lines will be set in the [text] property - see a sample below.</data>
</node>
<node id="n1.2.3">
<data key="labels">:CONTENT</data>
<data key="name">1.2.3 Content without notes</data>
<data key="text">Here is a second line.
And third line that will be joined to the [text] property with a cross link to (1.2.2)</data>
<data key="notes"></data>
</node>
<node id="n2">
<data key="labels">:HEADING</data>
<data key="name">2 Second branch</data>
<data key="text"></data>
<data key="notes"></data>
</node>
<node id="n2.1">
<data key="labels">:HEADING</data>
<data key="name">Heading which will not render the index in front of this line</data>
<data key="text"></data>
<data key="notes"></data>
</node>
<node id="n2.1.1">
<data key="labels">:HEADING</data>
<data key="name">2.1.1 Multiline Heading</data>
<data key="text">Content text.</data>
<data key="notes">Content notes.</data>
</node>
<node id="n2.1.1.1">
<data key="labels">:CONTENT</data>
<data key="name">2.1.1.1 Getting deeper</data>
<data key="text">Content text with cross-link (1.2.1)</data>
<data key="notes"></data>
</node>
<node id="n2.2">
<data key="labels">:HEADING</data>
<data key="name">2.2 Heading</data>
<data key="text"></data>
<data key="notes"></data>
</node>
<node id="n2.2.1">
<data key="labels">:CONTENT</data>
<data key="name">2.2.1 Last example</data>
<data key="text">That's it :)</data>
<data key="notes"></data>
</node>
<edge source="n" target="n1" label="HAS" />
<edge source="n1" target="n1.1" label="HAS" />
<edge source="n1.1" target="n1.1.1" label="HAS" />
<edge source="n1" target="n1.2" label="HAS" />
<edge source="n1.2" target="n1.2.1" label="HAS" />
<edge source="n1.2" target="n1.2.2" label="HAS" />
<edge source="n1.2.2" target="n1.1.1" label="REFER" />
<edge source="n1.2" target="n1.2.3" label="HAS" />
<edge source="n1.2.3" target="n1.2.2" label="REFER" />
<edge source="n" target="n2" label="HAS" />
<edge source="n2" target="n2.1" label="HAS" />
<edge source="n2.1" target="n2.1.1" label="HAS" />
<edge source="n2.1.1" target="n2.1.1.1" label="HAS" />
<edge source="n2.1.1.1" target="n1.2.1" label="REFER" />
<edge source="n2" target="n2.2" label="HAS" />
<edge source="n2.2" target="n2.2.1" label="HAS" />
</graph>
</graphml>
